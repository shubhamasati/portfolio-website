// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  role      String   @default("admin")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  blogs     Blog[]
  profile   Profile?
}

model Profile {
  id                String   @id @default(cuid())
  userId            String   @unique
  user              User     @relation(fields: [userId], references: [id])
  bio               String?
  aboutMe           String?  // Detailed about me section
  title             String?
  location          String?
  website           String?
  github            String?
  linkedin          String?
  twitter           String?
  skills            String?  // Comma-separated skills
  experience        String?  // JSON string for experience
  education         String?  // JSON string for education
  avatar            String?  // URL to avatar image
  availabilityStatus String? // "available", "open_to_work", "not_available", "disabled"
  projects          Project[] // Relation to projects
  socialMedia       SocialMedia[] // Relation to social media handles
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Blog {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  content     String
  excerpt     String?
  published   Boolean  @default(false)
  authorId    String
  author      User     @relation(fields: [authorId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  publishedAt DateTime?
  tags        String?  // Comma-separated tags
  featured    Boolean  @default(false)
  readTime    Int?     // Estimated reading time in minutes
  views       Int      @default(0) // View count
  claps       Int      @default(0) // Clap count (like Medium)
  category    String?  // Blog category
  seoTitle    String?  // SEO optimized title
  seoDescription String? // SEO meta description
  coverImage  String?  // Cover image URL
  status      String   @default("draft") // draft, published, archived
  scheduledAt DateTime? // For scheduled publishing
  lastEditedAt DateTime? // Track last edit time
  showViews   Boolean  @default(true) // Control views visibility per blog
}

model Project {
  id          String   @id @default(cuid())
  profileId   String
  profile     Profile  @relation(fields: [profileId], references: [id], onDelete: Cascade)
  title       String
  description String
  technologies String  // Comma-separated technologies
  imageUrl    String?  // URL to project image
  liveUrl     String?  // URL to live project
  githubUrl   String?  // URL to GitHub repository
  featured    Boolean  @default(false)
  order       Int      @default(0) // For ordering projects
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model SocialMedia {
  id        String   @id @default(cuid())
  profileId String
  profile   Profile  @relation(fields: [profileId], references: [id], onDelete: Cascade)
  platform  String   // e.g., "GitHub", "LinkedIn", "Twitter", "Instagram", "YouTube", etc.
  url       String   // The social media URL
  username  String?  // Optional username for display
  icon      String?  // Icon name or class for rendering
  order     Int      @default(0) // For ordering social media handles
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
